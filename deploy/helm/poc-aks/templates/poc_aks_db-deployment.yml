apiVersion: apps/v1 
kind: Deployment
metadata:
  name: {{ include "poc-aks.fullname.db" . }}-deploy
  labels:
    {{- include "poc-aks.labels.db" . | nindent 4 }}
spec:
  selector:
    matchLabels:
        {{- include "poc-aks.labels.db" . | nindent 6 }}
  strategy:
    type: {{ .Values.strategy }}
  template:
    metadata:
      labels:
        {{- include "poc-aks.selectorLabels.db" . | nindent 8 }}
    spec:
      containers:
      - image: {{ .Values.image.db.repository }}:{{ .Values.image.db.tag }}
        name: {{ include "poc-aks.name.db" . }}
        args:
        - {{ .Values.mysql.args }}
        env:
        - name: {{ .Values.mysql.secret.rootPassword.env }}
          valueFrom:
            secretKeyRef:
              name: {{ .Values.mysql.secret.name }}
              key: {{ .Values.mysql.secret.rootPassword.key }}
        - name: {{ .Values.mysql.secret.userLogin.env.db }}
          valueFrom:
            secretKeyRef:
              name: {{ .Values.mysql.secret.name }}
              key: {{ .Values.mysql.secret.userLogin.key }}
        - name:  {{ .Values.mysql.secret.userPassword.env.db }}
          valueFrom:
            secretKeyRef:
              name: {{ .Values.mysql.secret.name }}
              key: {{ .Values.mysql.secret.userPassword.key }}
        ports:
        - containerPort: {{ .Values.service.db.port }}
          name: {{ include "poc-aks.name.db" . }}
        volumeMounts:
          {{- toYaml .Values.volume.db | nindent 10 }}
      volumes:
      - name: {{ .Values.volume.db.name }}
        persistentVolumeClaim:
          claimName: {{ include "poc-aks.fullname.db" . }}-pvc
